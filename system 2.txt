import tensorflow as tf
from keras.models import Sequential
from keras.datasets import mnist
import matplotlib.pyplot as plt
import numpy as np
import random


(x_train,y_train),(x_test,y_test)=mnist.load_data()
x_train=x_train/255
x_test=x_test/255


import keras
model=keras.Sequential()
model.add(keras.layers.Flatten(input_shape=(28,28)))
model.add(keras.layers.Dense(128,activation='relu'))
model.add(keras.layers.Dense(10,activation='softmax'))
model.summary()


model.compile(optimizer='sgd', loss='sparse_categorical_crossentropy', metrics=["Accuracy"])

H=model.fit(x_train,y_train,validation_data=(x_test,y_test),epochs=5)


test_loss,test_acc=model.evaluate(x_test,y_test)

print("Loss=%.3f"%test_loss)
print("Accuracy=%.3f"%test_acc)


n=random.randint(0,999)
plt.imshow(x_test[n])
plt.show()

prediction=model.predict(x_test)
print("The handwritten number in the image is %d"%np.argmax(prediction[n]))